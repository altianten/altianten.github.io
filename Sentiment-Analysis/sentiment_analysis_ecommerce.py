# -*- coding: utf-8 -*-
"""Sentiment-Analysis-Ecommerce.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uzaBAqCNiAprCVFulhxdXtR74dDHOnuw
"""

import pandas as pd

# Gunakan URL mentah (raw) dari file CSV di GitHub
# URL ini harus diakhiri dengan .csv dan tidak berisi /blob/
url = "https://raw.githubusercontent.com/latifaa3/Shopee-Sentiment-Analysis/main/shopee_reviews_preprocessed.csv"

# Memuat data dari URL ke dalam DataFrame
df = pd.read_csv(url)

# Menampilkan 5 baris pertama untuk memeriksa data
print(df.head())

# Menampilkan informasi kolom dan tipe data
print(df.info())

!pip install gensim

!pip install scikit-learn

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
import warnings

warnings.filterwarnings('ignore')

# Memuat data Anda dari URL
url = "https://raw.githubusercontent.com/latifaa3/Shopee-Sentiment-Analysis/main/shopee_reviews_preprocessed.csv"
df = pd.read_csv(url)

# Inisialisasi TfidfVectorizer
# Kita akan menggunakan kolom 'text_steamindo' yang sudah bersih
tfidf_vectorizer = TfidfVectorizer()

# Mengubah teks menjadi fitur TF-IDF
X = tfidf_vectorizer.fit_transform(df['text_steamindo'])

# Tentukan fitur (X) dan label (y)
y = df['Label']

# Membagi data menjadi set pelatihan (80%) dan pengujian (20%)
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Menampilkan ukuran set data
print("Ukuran data pelatihan (fitur):", X_train.shape)
print("Ukuran data pengujian (fitur):", X_test.shape)
print("Ukuran data pelatihan (label):", y_train.shape)
print("Ukuran data pengujian (label):", y_test.shape)

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, precision_score, recall_score, confusion_matrix
import warnings

warnings.filterwarnings('ignore')

# Memuat data Anda dari URL
url = "https://raw.githubusercontent.com/latifaa3/Shopee-Sentiment-Analysis/main/shopee_reviews_preprocessed.csv"
df = pd.read_csv(url)

# Inisialisasi TfidfVectorizer
tfidf_vectorizer = TfidfVectorizer()

# Mengubah teks menjadi fitur TF-IDF
X = tfidf_vectorizer.fit_transform(df['text_steamindo'])

# Tentukan fitur (X) dan label (y)
y = df['Label']

# Membagi data menjadi set pelatihan (80%) dan pengujian (20%)
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Inisialisasi model Naive Bayes
model = MultinomialNB()

# Melatih model menggunakan data pelatihan
model.fit(X_train, y_train)

# Membuat prediksi pada data pengujian
y_pred = model.predict(X_test)

# --- Tahap Evaluasi Model ---
# Menghitung metrik evaluasi
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred, average='weighted', zero_division=0)
recall = recall_score(y_test, y_pred, average='weighted', zero_division=0)
cm = confusion_matrix(y_test, y_pred)

# Menampilkan hasil evaluasi
print(f"Akurasi: {accuracy:.2f}")
print(f"Presisi: {precision:.2f}")
print(f"Recall: {recall:.2f}")
print("\nConfusion Matrix:")
print(cm)

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, precision_score, recall_score, confusion_matrix
from scipy.sparse import hstack
import warnings

warnings.filterwarnings('ignore')

# Memuat data Anda dari URL
url = "https://raw.githubusercontent.com/latifaa3/Shopee-Sentiment-Analysis/main/shopee_reviews_preprocessed.csv"
df = pd.read_csv(url)

# --- Feature Engineering: Menambahkan fitur baru ---
# Menghitung jumlah tanda seru (!)
df['exclamation_count'] = df['content'].apply(lambda x: str(x).count('!'))

# Mengubah teks menjadi fitur TF-IDF
tfidf_vectorizer = TfidfVectorizer()
X_text = tfidf_vectorizer.fit_transform(df['text_steamindo'])

# Menggabungkan fitur teks (TF-IDF) dengan fitur baru (jumlah tanda seru)
X = hstack([X_text, df[['exclamation_count']]])

# Tentukan fitur (X) dan label (y)
y = df['Label']

# Membagi data menjadi set pelatihan (80%) dan pengujian (20%)
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Inisialisasi model Naive Bayes
model = MultinomialNB()

# Melatih model menggunakan data pelatihan
model.fit(X_train, y_train)

# Membuat prediksi pada data pengujian
y_pred = model.predict(X_test)

# Menghitung metrik evaluasi
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred, average='weighted', zero_division=0)
recall = recall_score(y_test, y_pred, average='weighted', zero_division=0)
cm = confusion_matrix(y_test, y_pred)

# Menampilkan hasil evaluasi
print(f"Akurasi setelah Feature Engineering (Tanda Seru): {accuracy:.2f}")
print(f"Presisi setelah Feature Engineering (Tanda Seru): {precision:.2f}")
print(f"Recall setelah Feature Engineering (Tanda Seru): {recall:.2f}")
print("\nConfusion Matrix:")
print(cm)

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, precision_score, recall_score, confusion_matrix
import warnings

warnings.filterwarnings('ignore')

# Memuat data Anda dari URL
url = "https://raw.githubusercontent.com/latifaa3/Shopee-Sentiment-Analysis/main/shopee_reviews_preprocessed.csv"
df = pd.read_csv(url)

# Mengubah teks menjadi fitur TF-IDF
tfidf_vectorizer = TfidfVectorizer()
X = tfidf_vectorizer.fit_transform(df['text_steamindo'])

# Tentukan fitur (X) dan label (y)
y = df['Label']

# Membagi data menjadi set pelatihan (80%) dan pengujian (20%)
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# --- Mengganti model dengan Naive Bayes ---
model = MultinomialNB()

# Melatih model
model.fit(X_train, y_train)

# Membuat prediksi
y_pred = model.predict(X_test)

# Menghitung metrik evaluasi
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred, average='weighted', zero_division=0)
recall = recall_score(y_test, y_pred, average='weighted', zero_division=0)
cm = confusion_matrix(y_test, y_pred)

# Menampilkan hasil
print(f"Akurasi dengan Naive Bayes: {accuracy:.2f}")
print(f"Presisi dengan Naive Bayes: {precision:.2f}")
print(f"Recall dengan Naive Bayes: {recall:.2f}")
print("\nConfusion Matrix:")
print(cm)

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
import joblib

# Memuat data Anda
url = "https://raw.githubusercontent.com/latifaa3/Shopee-Sentiment-Analysis/main/shopee_reviews_preprocessed.csv"
df = pd.read_csv(url)

# Mengubah teks menjadi fitur TF-IDF
tfidf_vectorizer = TfidfVectorizer()
X = tfidf_vectorizer.fit_transform(df['text_steamindo'])

# Tentukan fitur (X) dan label (y)
y = df['Label']

# Melatih model Naive Bayes (model terbaik)
model = MultinomialNB()
model.fit(X, y)

# Menyimpan model dan vectorizer ke dalam file
joblib.dump(model, 'sentiment_model.pkl')
joblib.dump(tfidf_vectorizer, 'tfidf_vectorizer.pkl')
print("Model dan vectorizer berhasil disimpan!")